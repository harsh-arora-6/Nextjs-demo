{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// This import won't be a part of bundle in client side code as it is used in getStaticProps\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport { Fragment } from \"react\";\nimport Head from \"next/head\";\n\nfunction HomePage(props) {\n  // console.log(props);\n  // console.log('Home Page',props);\n  return /*#__PURE__*/_jsxs(Fragment, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"title\", {\n        children: \"React Meetups\"\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: \"Browse a huge list of highly active React meetups\"\n      })]\n    }), /*#__PURE__*/_jsx(MeetupList, {\n      meetups: props.meetups\n    })]\n  });\n} // export async function getServerSideProps(context) {\n//   /**\n//    * If you don't have data that changes multiple times a second or if we don't need access to req object lets say for authentication\n//    * then getStaticProps is better as it would be faster.\n//    */\n//   // request,response\n//   const req = context.req;\n//   const resp = context.res;\n//   // fetch data from API or take to some database\n//   return {\n//     // here props is the props which we receive in above component.\n//     // this is how we can move data fetching away from client side to the build process side\n//     props: {\n//       meetups: DUMMY_MEETUPS,\n//     },\n//   };\n// }\n\n\nexport var __N_SSG = true;\nexport default HomePage;","map":null,"metadata":{},"sourceType":"module"}