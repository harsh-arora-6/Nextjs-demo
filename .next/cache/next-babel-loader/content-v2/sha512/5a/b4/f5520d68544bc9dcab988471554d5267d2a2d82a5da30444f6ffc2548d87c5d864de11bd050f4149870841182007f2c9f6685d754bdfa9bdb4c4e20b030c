{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/harsharora/Documents/nextjs-app/pages/[meetupId]/index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n} // this function is required in dynamic pages when using getStaticProps\n\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/Users/harsharora/Documents/nextjs-app/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetails","props","meetupData","image","title","address","description"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD1B;AAEE,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF1B;AAGE,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH5B;AAIE,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJhC;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,C,CACD;;;KAVSN,a;;AAsDT,eAAeA,aAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(props) {\n  return (\n    <MeetupDetail\n      image={props.meetupData.image}\n      title={props.meetupData.title}\n      address={props.meetupData.address}\n      description={props.meetupData.description}\n    />\n  );\n}\n// this function is required in dynamic pages when using getStaticProps\nexport async function getStaticPaths() {\n  // we can dynamically generate paths by fetching the array of ids from database,\n  // fallback = false means that only the paths defined should exist\n  // fallback = true means for the defined paths pages should be pre generated while the other pages will be dynamically pre generated on the server for the incoming request\n  //   with the help of fallback we can pre generate some popular pages\n  return {\n    fallback: false,\n    paths: [\n      {\n        params: {\n          meetupId: \"m1\",\n        },\n      },\n      {\n        params: {\n          meetupId: \"m2\",\n        },\n      },\n    ],\n  };\n}\nexport async function getStaticProps(context) {\n  // fetch data from API or take to some database\n  //   here context won't have request,response\n  const meetupId = context.params.meetupId;\n  return {\n    // here props is the props which we receive in above component.\n    // this is how we can move data fetching away from client side to the build process side\n    props: {\n      meetupData: {\n        id: meetupId,\n        image:\n          \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQBYm7g_W9BtaVvrBtn1PAp1oZ59vHHfuIKOlHvXhgi&s\",\n        title: \"First Meetup\",\n        address: \"Some random place\",\n        description: \"This is first meetup\",\n      },\n    },\n    // time in seconds after which the page should be re pre-rendered with the new data.\n    // page is updated regularly after deployment(not only at build time)\n    revalidate: 10,\n  };\n}\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}