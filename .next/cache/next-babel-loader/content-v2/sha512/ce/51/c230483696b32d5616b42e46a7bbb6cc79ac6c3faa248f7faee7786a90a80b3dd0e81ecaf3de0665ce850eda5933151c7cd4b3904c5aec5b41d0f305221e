{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/harsharora/Documents/nextjs-app/pages/index.js\";\n// This import won't be a part of bundle in client side code as it is used in getStaticProps\nimport { MongoClient } from \"mongodb\";\nimport MeetupList from \"../components/meetups/MeetupList\";\n\nfunction HomePage(props) {\n  // console.log(props);\n  // console.log('Home Page',props);\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 10\n  }, this);\n} // export async function getServerSideProps(context) {\n//   /**\n//    * If you don't have data that changes multiple times a second or if we don't need access to req object lets say for authentication\n//    * then getStaticProps is better as it would be faster.\n//    */\n//   // request,response\n//   const req = context.req;\n//   const resp = context.res;\n//   // fetch data from API or take to some database\n//   return {\n//     // here props is the props which we receive in above component.\n//     // this is how we can move data fetching away from client side to the build process side\n//     props: {\n//       meetups: DUMMY_MEETUPS,\n//     },\n//   };\n// }\n\n\nexport async function getStaticProps() {\n  // console.log('hi');\n  // fetch data from API or take to some database\n  // we can use credentials here as it won't be exposed\n  const client = await MongoClient.connect(\"mongodb+srv://harsh_arora:iBk8oP6RjVv1O34V@cluster0.jfh4zpi.mongodb.net/?retryWrites=true&w=majority\");\n  const db = client.db(\"meetups\");\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    // here props is the props which we receive in above component.\n    // this is how we can move data fetching away from client side to the build process side\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        image: meetup.image,\n        address: meetup.address,\n        description: meetup.description,\n        id: meetup._id.toString()\n      }))\n    },\n    // time in seconds after which the page should be re pre-rendered with the new data.\n    // page is updated regularly after deployment(not only at build time)\n    revalidate: 1\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["/Users/harsharora/Documents/nextjs-app/pages/index.js"],"names":["MongoClient","MeetupList","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","map","meetup","title","image","address","description","id","_id","toString","revalidate"],"mappings":";;AAAA;AACA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,UAAP,MAAuB,kCAAvB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB;AACA;AACA,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA;AACA;AACA,QAAMC,MAAM,GAAG,MAAMN,WAAW,CAACO,OAAZ,CACrB,sGADqB,CAArB;AAID,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,CAAU,SAAV,CAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AAEAN,EAAAA,MAAM,CAACO,KAAP;AACC,SAAO;AACL;AACA;AACAV,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAACA,OAAO,CAACU,GAAR,CAAaC,MAAD,KAAW;AACjCC,QAAAA,KAAK,EAACD,MAAM,CAACC,KADoB;AAEjCC,QAAAA,KAAK,EAACF,MAAM,CAACE,KAFoB;AAGjCC,QAAAA,OAAO,EAACH,MAAM,CAACG,OAHkB;AAIjCC,QAAAA,WAAW,EAACJ,MAAM,CAACI,WAJc;AAKjCC,QAAAA,EAAE,EAAEL,MAAM,CAACM,GAAP,CAAWC,QAAX;AAL6B,OAAX,CAAZ;AADH,KAHF;AAYL;AACA;AACAC,IAAAA,UAAU,EAAE;AAdP,GAAP;AAgBD;AAED,eAAerB,QAAf","sourcesContent":["// This import won't be a part of bundle in client side code as it is used in getStaticProps\nimport { MongoClient } from \"mongodb\";\nimport MeetupList from \"../components/meetups/MeetupList\";\n\nfunction HomePage(props) {\n  // console.log(props);\n  // console.log('Home Page',props);\n  return <MeetupList meetups={props.meetups} />;\n}\n\n// export async function getServerSideProps(context) {\n//   /**\n//    * If you don't have data that changes multiple times a second or if we don't need access to req object lets say for authentication\n//    * then getStaticProps is better as it would be faster.\n//    */\n//   // request,response\n//   const req = context.req;\n//   const resp = context.res;\n\n//   // fetch data from API or take to some database\n//   return {\n//     // here props is the props which we receive in above component.\n//     // this is how we can move data fetching away from client side to the build process side\n//     props: {\n//       meetups: DUMMY_MEETUPS,\n//     },\n//   };\n// }\nexport async function getStaticProps() {\n  // console.log('hi');\n  // fetch data from API or take to some database\n  // we can use credentials here as it won't be exposed\n  const client = await MongoClient.connect(\n\t\t\"mongodb+srv://harsh_arora:iBk8oP6RjVv1O34V@cluster0.jfh4zpi.mongodb.net/?retryWrites=true&w=majority\"\n\t);\n\n\tconst db = client.db(\"meetups\");\n\n\tconst meetupsCollection = db.collection(\"meetups\");\n\n\tconst meetups = await meetupsCollection.find().toArray();\n\n\tclient.close();\n  return {\n    // here props is the props which we receive in above component.\n    // this is how we can move data fetching away from client side to the build process side\n    props: {\n      meetups:meetups.map((meetup)=>({\n\t\t\t\ttitle:meetup.title,\n\t\t\t\timage:meetup.image,\n\t\t\t\taddress:meetup.address,\n\t\t\t\tdescription:meetup.description,\n\t\t\t\tid: meetup._id.toString()\n\t  })),\n    },\n    // time in seconds after which the page should be re pre-rendered with the new data.\n    // page is updated regularly after deployment(not only at build time)\n    revalidate: 1,\n  };\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}