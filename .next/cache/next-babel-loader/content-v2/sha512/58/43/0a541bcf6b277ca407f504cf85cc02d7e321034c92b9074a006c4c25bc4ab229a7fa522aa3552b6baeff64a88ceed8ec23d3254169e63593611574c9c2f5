{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/harsharora/Documents/nextjs-app/pages/index.js\";\n// This import won't be a part of bundle in client side code as it is used in getStaticProps\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport { Fragment } from \"react\";\nimport Head from \"next/head\";\n\nfunction HomePage(props) {\n  // console.log(props);\n  // console.log('Home Page',props);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"React Meetups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"Browse a huge list of highly active React meetups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n} // export async function getServerSideProps(context) {\n//   /**\n//    * If you don't have data that changes multiple times a second or if we don't need access to req object lets say for authentication\n//    * then getStaticProps is better as it would be faster.\n//    */\n//   // request,response\n//   const req = context.req;\n//   const resp = context.res;\n//   // fetch data from API or take to some database\n//   return {\n//     // here props is the props which we receive in above component.\n//     // this is how we can move data fetching away from client side to the build process side\n//     props: {\n//       meetups: DUMMY_MEETUPS,\n//     },\n//   };\n// }\n\n\n_c = HomePage;\nexport var __N_SSG = true;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/harsharora/Documents/nextjs-app/pages/index.js"],"names":["MeetupList","Fragment","Head","HomePage","props","meetups"],"mappings":";;AAAA;AAEA,OAAOA,UAAP,MAAuB,kCAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB;AACA;AACA,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,aADP;AAEE,QAAA,OAAO,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;KAlCSF,Q;;AAoET,eAAeA,QAAf","sourcesContent":["// This import won't be a part of bundle in client side code as it is used in getStaticProps\nimport { MongoClient } from \"mongodb\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport { Fragment } from \"react\";\nimport Head from \"next/head\";\n\nfunction HomePage(props) {\n  // console.log(props);\n  // console.log('Home Page',props);\n  return (\n    <Fragment>\n      <Head>\n        <title>React Meetups</title>\n        <meta\n          name=\"description\"\n          content=\"Browse a huge list of highly active React meetups\"\n        />\n      </Head>\n      <MeetupList meetups={props.meetups} />\n    </Fragment>\n  );\n}\n\n// export async function getServerSideProps(context) {\n//   /**\n//    * If you don't have data that changes multiple times a second or if we don't need access to req object lets say for authentication\n//    * then getStaticProps is better as it would be faster.\n//    */\n//   // request,response\n//   const req = context.req;\n//   const resp = context.res;\n\n//   // fetch data from API or take to some database\n//   return {\n//     // here props is the props which we receive in above component.\n//     // this is how we can move data fetching away from client side to the build process side\n//     props: {\n//       meetups: DUMMY_MEETUPS,\n//     },\n//   };\n// }\nexport async function getStaticProps() {\n  // console.log('hi');\n  // fetch data from API or take to some database\n  // we can use credentials here as it won't be exposed\n  const client = await MongoClient.connect(\n    \"mongodb+srv://harsh_arora:iBk8oP6RjVv1O34V@cluster0.jfh4zpi.mongodb.net/?retryWrites=true&w=majority\"\n  );\n\n  const db = client.db(\"meetups\");\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const meetups = await meetupsCollection.find().toArray();\n\n  client.close();\n  return {\n    // here props is the props which we receive in above component.\n    // this is how we can move data fetching away from client side to the build process side\n    props: {\n      meetups: meetups.map((meetup) => ({\n        title: meetup.title,\n        image: meetup.image,\n        address: meetup.address,\n        description: meetup.description,\n        id: meetup._id.toString(),\n      })),\n    },\n    // time in seconds after which the page should be re pre-rendered with the new data.\n    // page is updated regularly after deployment(not only at build time)\n    revalidate: 1,\n  };\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}